/*
//	Mixin for seat distribution around circlular table
//	$table-sizes is defined in _base.scss
*/

@mixin distribute-seats-circle($angle-span: 360deg, $angle-offset: 0deg) {

	@each $size in $table-sizes {

		$angle-per-table: $angle-span / $size;

		&[data-table-size="#{$size}"] .table {

			@for $i from 1 through $size {
				.seat[data-seat-number="#{$i}"] {
					@include transform(rotate($angle-offset + $angle-per-table * $i));
				}
			}
		}
	}

}

@mixin generate-grid(
  $vertical: 30px,
  $verticalcolor: green,
  $horizontal: 30px,
  $horizontalmargin: 10px,
  $horizontalcolor: green) {

  @include background-image(linear-gradient(color-stops($verticalcolor 5%, rgba(0, 0, 0, 0) 5%, rgba(0, 0, 0, 0) 100%)));
  background-size: 100% $vertical;
  background-position: fixed;
  position: relative;
  &:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    height: 100%;
    width: 100%;
    background-position: fixed;
    $totalwidth: $horizontal + $horizontalmargin;
    background-size: ($totalwidth) 100%;
    @include background-image(linear-gradient(color-stops(rgba(lighten($verticalcolor, 50%), 0.7) round(percentage($horizontal/$totalwidth))),
                             rgba(0, 0, 0, 0) round(percentage($horizontal/$totalwidth)),
                             rgba(0, 0, 0, 0) 100%), left);

  }

}